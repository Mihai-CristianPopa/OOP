Travel Agency 

O agentie de voiaj a ales sa satisfaca doua nișe: turismul montan si turismul insulelor.
Pentru a oferi servicii cat mai bune, agentia va cere fiecarei locatie turistica (Destination) date clare despre aceasta: tara in care se afla destinatia, orasul, dar si denumirea locatiei. De asemenea, se va cunoaste pentru fiecare locatie o lista cu recenziile, dar si pretul sederii pentru o zi.

Locatiile au si particularitati: destinatiile insulare pot fi de doua tipuri: cu iesire la mare, sau cu iesire la ocean. Fiecare in parte va retine si numarul de insule din apropierea locatiei.
Oricine viziteaza o destinatia montana va stii dinainte inaltimea celui mai apropiat varf montan, distanta pana la acesta, precum si numarul de trasee special amenajate din zona.

Recenziile vor contine numele clientului, durata de sedere (zile) si o nota intra 1 si 10 (ca si cum ar putea oferi jumatati de stele).

Agentia va organiza si reduceri, iar la inceput se va axa pe trei tipuri: MountainsDiscount, IslandsDiscount, PercentileDiscount.

Intrebari colegi:
Q. 1. Aceste Discount sunt metode in clasa agency? Sunt date din clasa, un vector de discount-uri sau macar 3 campuri cu un discount din fiecare tip.
Q. 2. Cum sunt calculate? Sunt citite direct in metodele de adaugare. La ultima cerinta se cere sumarizarea. Veti aplica atunci discountuirle (adica veti gasi pretul exact)


Scopul proiectului este sa ne insusim cateva moduri de lucru si a avea o clasa principala (TravelAgency) care va face operatii cu datele noastre. Practic, aceasta va contine toate datele (lista de destinatii) si le poate modifica.

Cerintele:

Implementati corect si complet ierarhia de clase (40% din punctaj). Aveti grija ca avem si composition, si inheritance.
Creati si clasa TravelAgency care va putea retine un vector de Destination’s alocate dinamic (10% din punctaj)
	
*alocate, adica vectorul poate fi static, dar fiecare produs in parte va fi alocat dinamic:

Destination *destinations[100];
// iar cand adaugam un nou produs vom face, spre exemplu,
destinations[0] = new MountainDestination(...)

Primiti bonus + experienta daca veti face STL, pe lunga durata este cu mult mai util :D

vector<Destination*> destinations. 

Adaugati in main un exemplu care sa contina cel putin 5 destinații de tipuri diferite, dar și un obiect de tipul TravelAgency in care le vom adauga. Nu este nevoie de un meniu interactic  (10% din punctaj)

Creati o metoda a agentiei specifica pentru a seta unul dintre discount-uri (pentru insule, pentru munti, sau procentuale)

Dupa aceea veti crea si o metoda care:

va afisa sumar date despre fiecare destinatie in parte: denumirea destinatiei, orasul, tara, numarul de review-uri si media recenziilor. Dupa fiecare destinatie se va afisa si pretul, la care s-au aplicat NU toate discount-urile din prezent, ci doar pe cel de valoare maxima (trebuie sa testati daca aceste este cel insular sau cel procentual, sau daca exista :).)

BONUS: creati o functie cu antetul 

map<Destination*, Review**> reviews()
..sau map<Destination*, vector<Review*> > reviews()

Si o functie 

map<Review*, Destination*> reviewsDestination()

Prima functie va calcula asocierea dintre fiecare destinatie in parte si recenziile acesteia, iar cea de-a doua va retine pentru fiecare recenzie in parte destinatia din care aceasta face parte.
Aveti grija ca daca implementati aceasta functie, veti castiga pana la +2.5p bonus complex.


Deoarece aceste bonusuri sunt mai usor de implementat si vor fi bonus inclusiv la colocviu, veti primi +1.5p pentru fiecare in parte

Bonus 2 -> Singleton. N-am facut inca acest lucru, dar inclusiv anul trecut la examen am avut punctaj bonus de remarcat daca facem o clasa de tip Singleton (este o clasa speciala, cu cateva reguli
Bonus 3 -> meniu interactiv prin care putem in primul rand s	a alegem una dintre cerinte si sa o rulam, dar si sa adaugam/stergem destinatii.
Bonus 4 -> testarea erorilor. Veti trata una dintre  posibilele erori:

Subiectul 1:
Un sticker poate fi creat doar daca are un text de cel mult 30 de caractere

Subiectul 2:
Un discount procentual are intotdeauna o valoarea mai mica decat 50%
